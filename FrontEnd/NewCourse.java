
package FrontEnd;

import Models.*;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import static Constants.ColourSchemeConstants.*;
import static Constants.LabelConstants.CREATE_NEW_COURSE;
import static Constants.MessageConstants.EMPTY_LOGIN;
import static Constants.MessageConstants.EMPTY_NEW_COURSE_FIELDS;
import static Constants.MessageConstants.INVALID_COURSE_ID;

/**
 * Provides methods to create the NewCourse JDiologue Box
 * @author Jack Glass, Rylan Kettles, Sara Rathje
 * @version 1.0
 * @since April 4, 2018
 */
public class NewCourse extends javax.swing.JDialog {

    /**
     * Creates new newCourse object.
     */
    public NewCourse(java.awt.Frame parent, boolean modal, Client client) {
        super(parent, modal);
        this.client = client;
        initComponents();
        addListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        activeGroup = new javax.swing.ButtonGroup();
        name = new javax.swing.JLabel();
        departmentField = new javax.swing.JTextField();
        courseNumber = new javax.swing.JLabel();
        courseNumberField = new javax.swing.JTextField();
        active = new javax.swing.JLabel();
        yesRButton = new javax.swing.JRadioButton();
        noRBUtton = new javax.swing.JRadioButton();
        addButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Course");

        name.setText("Depatment:");
        name.setForeground(FOREGROUND_COLOUR);

        courseNumber.setText("Course Number:");
        courseNumber.setForeground(FOREGROUND_COLOUR);

        active.setText("Active:");
        active.setForeground(FOREGROUND_COLOUR);

        activeGroup.add(yesRButton);
        yesRButton.setText("Yes");
        yesRButton.setForeground(FOREGROUND_COLOUR);

        activeGroup.add(noRBUtton);
        noRBUtton.setText("No");
        noRBUtton.setForeground(FOREGROUND_COLOUR);

        addButton.setText("Add");

        cancelButton.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(active)
                            .addComponent(courseNumber)
                            .addComponent(name))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yesRButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(noRBUtton))
                            .addComponent(courseNumberField)
                            .addComponent(departmentField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelButton)))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseNumber))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(active)
                    .addComponent(yesRButton)
                    .addComponent(noRBUtton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        getContentPane().setBackground(LOGIN_BACKGROUND_COLOUR);
        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                NewCourse dialog = new NewCourse(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel createCourseLabel;
    private javax.swing.JLabel active;
    private javax.swing.ButtonGroup activeGroup;
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel courseNumber;
    private javax.swing.JTextField courseNumberField;
    private javax.swing.JTextField departmentField;
    private javax.swing.JLabel name;
    private javax.swing.JRadioButton noRBUtton;
    private javax.swing.JRadioButton yesRButton;
    // End of variables declaration//GEN-END:variables
    private Client client;

    /**
     * Clears input fields on submit and close.
     */
    private void clearInputFields() {
        departmentField.setText("");
        courseNumberField.setText("");
        noRBUtton.setSelected(false);
        yesRButton.setSelected(false);
    }

    
    private void addListener(){
        addButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent event) {
                try {
                    if (!departmentField.getText().equals("") && !courseNumberField.getText().equals("") &&
                            (yesRButton.isSelected() || noRBUtton.isSelected())) {
                        client.createNewCourse(createCourse());
                        clearInputFields();
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(getContentPane(), EMPTY_NEW_COURSE_FIELDS, "",
                                JOptionPane.WARNING_MESSAGE);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(getContentPane(), INVALID_COURSE_ID, "",
                            JOptionPane.WARNING_MESSAGE);
                }

            }
        });

        cancelButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {
                clearInputFields();
                dispose();
            }
        });
    }

    /**
     * Creates a course based on the form input fields.
     * @return course created from input fields
     */
    private Course createCourse() {
        String courseName = departmentField.getText();
        int courseNumber = Integer.parseInt(courseNumberField.getText());
        int profID = client.getAuthenticatedUser().getID();
        boolean active = yesRButton.isSelected() ? true : false;

        return new Course(courseName, courseNumber, profID, active);
    }
}
